apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "tryLogging.EntryPoint"

defaultTasks 'init'

def libDir = new File('lib/test')
def confDir = new File('conf')
def logDir = new File('log')

task makeConfDir << {
    confDir.mkdirs()
}

task makeLibDir << {
    libDir.mkdirs()
    logDir.mkdirs()
}

repositories {
   flatDir(dirs: 'lib')
   mavenCentral()
}

dependencies {
   testCompile fileTree('lib/test')
   //compile fileTree('conf')
   compile 'joda-time:joda-time:2.4'
   compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.0.2'
   compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.0.2'
}

task init {
    dependsOn 'makeLibDir'
    dependsOn 'makeConfDir'
    dependsOn 'copyTask'
    dependsOn 'copyConfTask'
    dependsOn 'initSourceFolders'
    dependsOn 'eclipse'
    dependsOn check
}

task initSourceFolders {
   description 'creates std file structure for java, test and resources'
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

sourceSets.main.java.srcDir 'conf'

jar {
    description 'creates jar; basename: testingGradle, version: 0.0.77'
    baseName = 'log4jTrying'
    version =  '0.0.1'
}

task copyTask(type: Copy) {
   description 'something has to be inside src and lib dirs because of behaviour of git'
   from '../deps'
   into 'lib'
   include '**/*.jar'
   exclude '**/*.txt'
}

task copyConfTask(type: Copy) {
   description 'copies log4j2 xml to conf dir'
   from '../confs'
   into 'conf'
   include 'log4j2.xml'
}

task trigger(dependsOn: 'build') {
    description 'this is the default task in this project. This task calls (depends on) build task'
}

task delMyDirX(type: Delete) {
    delete fileTree(dir: 'myOwnDstDir', include: '*.xml')
    description 'deletes all xml files in myOwnDstDir directory'
}

task delMyDir(type: Delete) {
    delete fileTree(dir: 'myOwnDstDir', exclude: 'dont_delete.xml')
    description 'deletes all files in myOwnDstDir except dont_delete.xml'
}

task delToInit(type: Delete) {
    delete fileTree(dir: 'build')
    delete 'src/main/java/tryLogging'
    delete 'src/test/java/tryLogging'
    delete 'bin'
}

task cleanAllMyDir(type: Delete) {
    delete fileTree(dir: 'myOwnDstDir')
    description 'deletes all files in myOwnDstDir'
}

delToInit.dependsOn cleanEclipse

//build.dependsOn copyTask
//clean.dependsOn delMyDir


